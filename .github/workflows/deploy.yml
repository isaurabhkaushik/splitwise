name: Deploy to Amazon ECS

on:
  issues:
    types:
      - opened

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Fetch branch name
      id: fetch
      run: |
        echo "::set-output name=branch::$(echo ${{ github.event.issue.title }} | sed 's/^deploy //I')"
        echo "::set-output name=timestamp::$(date +%FT%H-%M)"

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ format('{0}/{1}', secrets.AWS_PROJECT, github.event.repository.name) }}
        IMAGE_TAG: 'latest'
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

#     - name: Fill in the new image ID in the Amazon ECS task definition
#       id: task-def
#       uses: aws-actions/amazon-ecs-render-task-definition@v1
#       with:
#         task-definition: task-definition.json
#         container-name: sample-app
#         image: ${{ steps.build-image.outputs.image }}

#     - name: Deploy Amazon ECS task definition
#       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#       with:
#         task-definition: ${{ steps.task-def.outputs.task-definition }}
#         service: sample-app-service
#         cluster: default
#         wait-for-service-stability: true
  close-issue:
      name: Close GitHub issue
      runs-on: ubuntu-latest

      if: startsWith(github.event.issue.title, 'deploy')
      needs: [deploy]

      steps:
        - name: Close issue
          uses: peter-evans/close-issue@v1
          with:
            comment: |
              Deployed branch
              Auto-closing this issue.
